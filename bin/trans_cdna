#!/bin/env perl
use 5.010;
use strict;
use warnings;

use File::Basename;

=head1 NAME

trans_cdna - translate cDNA sequences, up to but not including stop codons

=head1 SYNOPSIS

trans_cdna cdna_cds.fa fasta > protein.fa

=head1 DESCRIPTION 

The script will translate one cDNA FASTA file to a protein Fasta file

=head1 FEEDBACK

=head2 Reporting Bugs

Report bugs via GitHub (https://github.com/MU-IRCF/dqp_pipeline/issues). 

=head1 AUTHORS

  Christopher Bottoms (adapted to remove any sequence starting at the "stop" codon, if applicable.)
  Ewan Birney (original script was called "translate_seq")

=cut

use Bio::SeqIO;

# Capture the first command line argument as the file name
my $filename_in = shift // exit_giving_usage();

exit_giving_usage() if index($filename_in, '-') == 0;

# Find out the format from the second command line argument
my ($format)    = shift // exit_giving_usage();

# input stream for sequences
my $seqin = Bio::SeqIO->new( -format => $format, -file => $filename_in); 

while( (my $seq = $seqin->next_seq()) ) {
    my $pseq    = $seq->translate();
    my $just_aa = $pseq->seq();

    # Find stop codon, if any
    my $first_stop_codon_index = index($just_aa, '*');

    # Skip this sequence if it starts with a stop codon`
    next if $first_stop_codon_index == 0;

    # Trim starting at the stop codon, if present
    if ($first_stop_codon_index > 0)
    {
        $just_aa = substr($just_aa, 0, $first_stop_codon_index);
    }

    # write out the translated sequence
    print ">", $seq->id(), "\n", $just_aa, "\n";
}

sub exit_giving_usage 
{
    say <<"END";
USAGE:
    $0 in_file_name.fa format > out_file_name.fa

    Input format can be "fasta" or "fastq".
    Input file name can be anything.
END
    exit;
}

sub remove_path_and_ext
{
    my $file_name = shift;
    (my $extensionless_name = $file_name) =~ s/\.[^.]+$//;
    my $basename = basename($extensionless_name);
    return $basename;
}
